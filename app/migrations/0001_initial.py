# Generated by Django 4.2.9 on 2024-12-19 08:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fees_amount', models.IntegerField()),
            ],
            options={
                'verbose_name': 'AcademicClass',
                'verbose_name_plural': 'AcademicClasses',
            },
        ),
        migrations.CreateModel(
            name='AcademicClassStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_streams', to='app.academicclass')),
            ],
            options={
                'verbose_name': 'ClassStream',
                'verbose_name_plural': 'ClassStreams',
            },
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=10, unique=True)),
                ('is_current', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'AcademicYear',
                'verbose_name_plural': 'AcademicYears',
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('out_of', models.IntegerField(default=100)),
                ('is_done', models.BooleanField(default=False)),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='app.academicclass')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=50, unique=True)),
                ('account_name', models.CharField(max_length=100)),
                ('account_type', models.CharField(max_length=50)),
                ('balance', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('One Off', 'One Off'), ('Recurring', 'Recurring')], max_length=50)),
                ('bill_duration', models.CharField(choices=[('None', 'None'), ('Termly', 'Termly'), ('Annually', 'Annually')], max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'billitem',
                'verbose_name_plural': 'billitems',
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=10)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicyear')),
            ],
            options={
                'verbose_name': 'budget',
                'verbose_name_plural': 'budgets',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='BudgetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_amount', models.IntegerField()),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_items', to='app.budget')),
            ],
        ),
        migrations.CreateModel(
            name='CashFlowStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('generated_on', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=3)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='UGX', max_length=10, unique=True)),
                ('desc', models.CharField(default='Ugandan Shillings', max_length=20)),
                ('cost', models.CharField(default='1', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Student', 'Student'), ('Academic', 'Academic'), ('Finance', 'Finance'), ('Administration', 'Administration'), ('Security', 'Security'), ('Transport', 'Transport'), ('Support', 'Support')], max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_incurred', models.DateField()),
                ('date_recorded', models.DateField(auto_now_add=True)),
                ('approved_by', models.CharField(max_length=100)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid')], default='Pending', max_length=20)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('budget_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_expenditures', to='app.budgetitem')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade', models.CharField(max_length=2)),
                ('points', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('bursar', 'Bursar'), ('director_of_studies', 'Director of Studies'), ('headmaster', 'Headmaster'), ('class_teacher', 'Class Teacher')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='SchoolSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('UG', 'Uganda'), ('KE', 'Kenya'), ('TZ', 'Tanzania'), ('RD', 'Rwanda'), ('BD', 'Burundi'), ('SD', 'South Sudan')], default='Uganda', max_length=40)),
                ('city', models.CharField(default='Kampala', max_length=40)),
                ('address', models.CharField(default='None', max_length=50)),
                ('postal', models.CharField(default='None', max_length=50)),
                ('website', models.CharField(default='None', max_length=50)),
                ('school_name', models.CharField(default='None', max_length=50)),
                ('school_motto', models.CharField(default='None', max_length=150)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('office_phone_number1', models.CharField(blank=True, max_length=20, null=True)),
                ('office_phone_number2', models.CharField(blank=True, max_length=40, null=True)),
                ('school_logo', models.ImageField(upload_to='logo')),
                ('app_name', models.CharField(default='E-School', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=25)),
                ('signature', models.ImageField(upload_to='signatures')),
            ],
            options={
                'verbose_name': 'Signature',
                'verbose_name_plural': 'Signatures',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('address', models.TextField()),
                ('marital_status', models.CharField(choices=[('M', 'Married'), ('U', 'Unmarried')], max_length=1)),
                ('contacts', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('qualification', models.CharField(max_length=100)),
                ('hire_date', models.DateField()),
                ('department', models.CharField(choices=[('Student', 'Student'), ('Academic', 'Academic'), ('Finance', 'Finance'), ('Administration', 'Administration'), ('Security', 'Security'), ('Transport', 'Transport'), ('Support', 'Support')], max_length=30)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_academic_staff', models.BooleanField(default=False)),
                ('is_administrator_staff', models.BooleanField(default=False)),
                ('is_support_staff', models.BooleanField(default=False)),
                ('staff_status', models.CharField(choices=[('Active', 'Active'), ('On Leave', 'On Leave'), ('Retired', 'Retired')], default='Active', max_length=20)),
                ('staff_photo', models.ImageField(upload_to='Staff/Profile_pics')),
                ('roles', models.ManyToManyField(related_name='staff_members', to='app.role')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stream', models.CharField(default='-', max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'stream',
                'verbose_name_plural': 'streams',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.CharField(max_length=30)),
                ('student_name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=2)),
                ('birthdate', models.DateField()),
                ('nationality', models.CharField(choices=[('Ugandan', 'Ugandan'), ('Kenyan', 'Kenyan'), ('Tanzanian', 'Tanzanian'), ('Rwanda', 'Rwanda'), ('South Sudan', 'South Sudan'), ('Burundi', 'Burundi')], max_length=30)),
                ('religion', models.CharField(choices=[('Muslim', 'Muslim'), ('Protestant', 'Protestant'), ('Catholic', 'Catholic'), ('Adventist', 'Adventist'), ('Others', 'Others')], max_length=30)),
                ('address', models.CharField(max_length=150)),
                ('guardian', models.CharField(max_length=50, verbose_name='Guardian Name')),
                ('relationship', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=50, verbose_name='Guardian Contact')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='student_photos')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicyear', verbose_name='Entry Year')),
                ('current_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.class', verbose_name='Current Class')),
                ('stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.stream')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
        ),
        migrations.CreateModel(
            name='StudentBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid'), ('Overdue', 'Overdue')], default='Unpaid', max_length=10)),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicclass')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentRegistrationCSV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.FileField(upload_to='media/csvs/')),
                ('uploaded', models.DateTimeField(auto_now_add=True)),
                ('activated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transaction_type', models.CharField(choices=[('Income', 'Income'), ('Expense', 'Expense')], max_length=10)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('related_income_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.incomesource')),
            ],
        ),
        migrations.CreateModel(
            name='TermResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('average_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_points', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('rank_in_class', models.IntegerField(blank=True, null=True)),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_results', to='app.academicclass')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term_results', to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1', 'I'), ('2', 'II'), ('3', 'III')], max_length=5)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicyear')),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'unique_together': {('academic_year', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('credit_hours', models.IntegerField()),
                ('type', models.CharField(choices=[('Core', 'Core'), ('Elective', 'Elective')], max_length=50)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.section')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='StudentBillItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.studentbill')),
                ('bill_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.billitem')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.term'),
        ),
        migrations.CreateModel(
            name='StaffDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50)),
                ('file', models.FileField(upload_to='Staff/Documents')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staff')),
            ],
            options={
                'verbose_name': 'StaffDocument',
                'verbose_name_plural': 'StaffDocuments',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='app.assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='ReportResults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot', models.IntegerField(default=0)),
                ('mot', models.IntegerField(default=0)),
                ('eot', models.IntegerField(default=0)),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_results', to='app.academicclass')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('School Pay', 'School Pay'), ('Bank', 'Bank')], max_length=50)),
                ('reference_no', models.CharField(max_length=50)),
                ('recorded_by', models.CharField(max_length=50)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app.studentbill')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenditureItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('units', models.CharField(choices=[('Piece', 'Piece'), ('Set', 'Set'), ('Pair', 'Pair'), ('Box', 'Box'), ('Kgs', 'Kgs'), ('Litre', 'Litre'), ('Jerry Can', 'Jerry Can')], max_length=50)),
                ('unit_cost', models.IntegerField()),
                ('expenditure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='app.expenditure')),
            ],
            options={
                'verbose_name': 'expenditureitem',
                'verbose_name_plural': 'expenditureitems',
            },
        ),
        migrations.AddField(
            model_name='expenditure',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='app.vendor'),
        ),
        migrations.CreateModel(
            name='ClassSubjectAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_class_stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='app.academicclassstream')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='app.subject')),
                ('subject_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='app.staff')),
            ],
            options={
                'verbose_name': 'classsubjectallocation',
                'verbose_name_plural': 'classsubjectallocations',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='app.department'),
        ),
        migrations.AddField(
            model_name='budgetitem',
            name='expense',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='app.expense'),
        ),
        migrations.AddField(
            model_name='budget',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.term'),
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=50)),
                ('branch_name', models.CharField(max_length=50)),
                ('account_no', models.CharField(max_length=50)),
                ('account_name', models.CharField(max_length=50)),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.staff')),
            ],
            options={
                'verbose_name': 'bankdetail',
                'verbose_name_plural': 'bankdetails',
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='assessment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='app.assessmenttype'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='app.subject'),
        ),
        migrations.CreateModel(
            name='AnnualResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('average_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_points', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('rank_in_class', models.IntegerField(blank=True, null=True)),
                ('academic_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annual_results', to='app.academicclass')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annual_results', to='app.student')),
            ],
        ),
        migrations.AddField(
            model_name='academicclassstream',
            name='class_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staff'),
        ),
        migrations.AddField(
            model_name='academicclassstream',
            name='stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.stream'),
        ),
        migrations.AddField(
            model_name='academicclass',
            name='Class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.class'),
        ),
        migrations.AddField(
            model_name='academicclass',
            name='academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicyear'),
        ),
        migrations.AddField(
            model_name='academicclass',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.section'),
        ),
        migrations.AddField(
            model_name='academicclass',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.term'),
        ),
        migrations.CreateModel(
            name='StaffAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.role')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staff')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('staff', 'user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='ClassRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(default=0, max_length=10)),
                ('academic_class_stream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.academicclassstream')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
            ],
            options={
                'verbose_name': 'ClassRegister',
                'verbose_name_plural': 'ClassRegisters',
                'unique_together': {('academic_class_stream', 'student')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='budget',
            unique_together={('academic_year', 'term')},
        ),
        migrations.AlterUniqueTogether(
            name='assessment',
            unique_together={('academic_class', 'assessment_type', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='academicclassstream',
            unique_together={('academic_class', 'stream')},
        ),
        migrations.AlterUniqueTogether(
            name='academicclass',
            unique_together={('Class', 'academic_year', 'term')},
        ),
    ]
